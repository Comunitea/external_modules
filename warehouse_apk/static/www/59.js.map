{"version":3,"sources":["./node_modules/@ionic/core/dist/esm-es5/ion-segment_2-ios.entry.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC8F;AAC1F;AACO;AACsB;AAChF;AACA;AACA;AACA,QAAQ,2DAAgB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,2DAAW;AACpC,yBAAyB,2DAAW;AACpC,wBAAwB,2DAAW;AACnC;AACA;AACA,6BAA6B,eAAe;AAC5C;AACA;AACA,qCAAqC,eAAe;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,uBAAuB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,uDAAS;AACxB;AACA;AACA,mBAAmB,yDAAW;AAC9B;AACA;AACA;AACA;AACA,6CAA6C,6JAA6B;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,0BAA0B,EAAE;AAChF,mDAAmD,yBAAyB,EAAE;AAC9E,kDAAkD,wBAAwB,EAAE;AAC5E,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,eAAe;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,qDAAM,iCAAiC,qDAAM;AAC3E;AACA;AACA;AACA;AACA,sDAAsD,qCAAqC,EAAE;AAC7F;AACA;AACA;AACA;AACA;AACA,iBAAiB,8DAAY;AAC7B,uDAAuD,iBAAiB,EAAE;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,qCAAqC,EAAE;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,2DAAS;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,qCAAqC,EAAE;AAChG;AACA;AACA,uDAAuD,qCAAqC,EAAE;AAC9F,6CAA6C,uBAAuB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,eAAe;AAC9C;AACA;AACA;AACA,yDAAyD,qCAAqC,EAAE;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,mBAAmB,2DAAU;AAC7B,gBAAgB,2DAAC,CAAC,mDAAI,GAAG,6DAA6D,EAAE,4DAAkB,uBAAuB,sCAAsC,4DAAW,mDAAmD,4DAAW,qKAAqK,EAAE,2DAAC;AACxZ;AACA;AACA,0BAA0B,QAAQ,2DAAU,OAAO,EAAE;AACrD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,0BAA0B,eAAe,4BAA4B,kCAAkC,mCAAmC,oBAAoB,aAAa,kBAAkB,uBAAuB,oBAAoB,qBAAqB,uBAAuB,WAAW,6BAA6B,2CAA2C,kBAAkB,cAAc,2BAA2B,oBAAoB,sBAAsB,WAAW,kBAAkB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","file":"59.js","sourcesContent":["import { __awaiter, __generator } from \"tslib\";\nimport { r as registerInstance, d as createEvent, w as writeTask, c as getIonMode, h, H as Host, e as getElement } from './core-80bde1aa.js';\nimport { b as config } from './config-3c7f3790.js';\nimport { p as pointerCoord } from './helpers-46f4a262.js';\nimport { c as createColorClasses, h as hostContext } from './theme-18cbe2cc.js';\nvar Segment = /** @class */ (function () {\n    function class_1(hostRef) {\n        var _this = this;\n        registerInstance(this, hostRef);\n        this.didInit = false;\n        this.activated = false;\n        /**\n         * If `true`, the user cannot interact with the segment.\n         */\n        this.disabled = false;\n        /**\n         * If `true`, the segment buttons will overflow and the user can swipe to see them.\n         * In addition, this will disable the gesture to drag the indicator between the buttons\n         * in order to swipe to see hidden buttons.\n         */\n        this.scrollable = false;\n        this.onClick = function (ev) {\n            var current = ev.target;\n            var previous = _this.checked;\n            _this.value = current.value;\n            if (previous && _this.scrollable) {\n                _this.checkButton(previous, current);\n            }\n            _this.checked = current;\n        };\n        this.ionChange = createEvent(this, \"ionChange\", 7);\n        this.ionSelect = createEvent(this, \"ionSelect\", 7);\n        this.ionStyle = createEvent(this, \"ionStyle\", 7);\n    }\n    class_1.prototype.valueChanged = function (value, oldValue) {\n        this.ionSelect.emit({ value: value });\n        if (oldValue !== '' || this.didInit) {\n            if (!this.activated) {\n                this.ionChange.emit({ value: value });\n            }\n            else {\n                this.valueAfterGesture = value;\n            }\n        }\n    };\n    class_1.prototype.disabledChanged = function () {\n        this.gestureChanged();\n        var buttons = this.getButtons();\n        for (var _i = 0, buttons_1 = buttons; _i < buttons_1.length; _i++) {\n            var button = buttons_1[_i];\n            button.disabled = this.disabled;\n        }\n    };\n    class_1.prototype.gestureChanged = function () {\n        if (this.gesture && !this.scrollable) {\n            this.gesture.enable(!this.disabled);\n        }\n    };\n    class_1.prototype.connectedCallback = function () {\n        this.emitStyle();\n    };\n    class_1.prototype.componentWillLoad = function () {\n        this.emitStyle();\n    };\n    class_1.prototype.componentDidLoad = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a;\n            var _this = this;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        this.setCheckedClasses();\n                        _a = this;\n                        return [4 /*yield*/, import('./index-c38df685.js')];\n                    case 1:\n                        _a.gesture = (_b.sent()).createGesture({\n                            el: this.el,\n                            gestureName: 'segment',\n                            gesturePriority: 100,\n                            threshold: 0,\n                            passive: false,\n                            onStart: function (ev) { return _this.onStart(ev); },\n                            onMove: function (ev) { return _this.onMove(ev); },\n                            onEnd: function (ev) { return _this.onEnd(ev); },\n                        });\n                        this.gesture.enable(!this.scrollable);\n                        this.gestureChanged();\n                        if (this.disabled) {\n                            this.disabledChanged();\n                        }\n                        this.didInit = true;\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    class_1.prototype.onStart = function (detail) {\n        this.activate(detail);\n    };\n    class_1.prototype.onMove = function (detail) {\n        this.setNextIndex(detail);\n    };\n    class_1.prototype.onEnd = function (detail) {\n        this.setActivated(false);\n        var checkedValidButton = this.setNextIndex(detail, true);\n        detail.event.preventDefault();\n        detail.event.stopImmediatePropagation();\n        if (checkedValidButton) {\n            this.addRipple(detail);\n        }\n        var value = this.valueAfterGesture;\n        if (value !== undefined) {\n            this.ionChange.emit({ value: value });\n            this.valueAfterGesture = undefined;\n        }\n    };\n    class_1.prototype.getButtons = function () {\n        return Array.from(this.el.querySelectorAll('ion-segment-button'));\n    };\n    /**\n     * The gesture blocks the segment button ripple. This\n     * function adds the ripple based on the checked segment\n     * and where the cursor ended.\n     */\n    class_1.prototype.addRipple = function (detail) {\n        var _this = this;\n        var useRippleEffect = config.getBoolean('animated', true) && config.getBoolean('rippleEffect', true);\n        if (!useRippleEffect) {\n            return;\n        }\n        var buttons = this.getButtons();\n        var checked = buttons.find(function (button) { return button.value === _this.value; });\n        var root = checked.shadowRoot || checked;\n        var ripple = root.querySelector('ion-ripple-effect');\n        if (!ripple) {\n            return;\n        }\n        var _a = pointerCoord(detail.event), x = _a.x, y = _a.y;\n        ripple.addRipple(x, y).then(function (remove) { return remove(); });\n    };\n    /*\n     * Activate both the segment and the buttons\n     * due to a bug with ::slotted in Safari\n     */\n    class_1.prototype.setActivated = function (activated) {\n        var buttons = this.getButtons();\n        buttons.forEach(function (button) {\n            if (activated) {\n                button.classList.add('segment-button-activated');\n            }\n            else {\n                button.classList.remove('segment-button-activated');\n            }\n        });\n        this.activated = activated;\n    };\n    class_1.prototype.activate = function (detail) {\n        var _this = this;\n        var clicked = detail.event.target;\n        var buttons = this.getButtons();\n        var checked = buttons.find(function (button) { return button.value === _this.value; });\n        // Make sure we are only checking for activation on a segment button\n        // since disabled buttons will get the click on the segment\n        if (clicked.tagName !== 'ION-SEGMENT-BUTTON') {\n            return;\n        }\n        // If there are no checked buttons, set the current button to checked\n        if (!checked) {\n            this.value = clicked.value;\n        }\n        // If the gesture began on the clicked button with the indicator\n        // then we should activate the indicator\n        if (this.value === clicked.value) {\n            this.setActivated(true);\n        }\n    };\n    class_1.prototype.getIndicator = function (button) {\n        var root = button.shadowRoot || button;\n        return root.querySelector('.segment-button-indicator');\n    };\n    class_1.prototype.checkButton = function (previous, current) {\n        var previousIndicator = this.getIndicator(previous);\n        var currentIndicator = this.getIndicator(current);\n        if (previousIndicator === null || currentIndicator === null) {\n            return;\n        }\n        var previousClientRect = previousIndicator.getBoundingClientRect();\n        var currentClientRect = currentIndicator.getBoundingClientRect();\n        var widthDelta = previousClientRect.width / currentClientRect.width;\n        var xPosition = previousClientRect.left - currentClientRect.left;\n        // Scale the indicator width to match the previous indicator width\n        // and translate it on top of the previous indicator\n        var transform = \"translate3d(\" + xPosition + \"px, 0, 0) scaleX(\" + widthDelta + \")\";\n        writeTask(function () {\n            // Remove the transition before positioning on top of the previous indicator\n            currentIndicator.classList.remove('segment-button-indicator-animated');\n            currentIndicator.style.setProperty('transform', transform);\n            // Force a repaint to ensure the transform happens\n            currentIndicator.getBoundingClientRect();\n            // Add the transition to move the indicator into place\n            currentIndicator.classList.add('segment-button-indicator-animated');\n            // Remove the transform to slide the indicator back to the button clicked\n            currentIndicator.style.setProperty('transform', '');\n        });\n        this.value = current.value;\n        this.setCheckedClasses();\n    };\n    class_1.prototype.setCheckedClasses = function () {\n        var _this = this;\n        var buttons = this.getButtons();\n        var index = buttons.findIndex(function (button) { return button.value === _this.value; });\n        var next = index + 1;\n        // Keep track of the currently checked button\n        this.checked = buttons.find(function (button) { return button.value === _this.value; });\n        for (var _i = 0, buttons_2 = buttons; _i < buttons_2.length; _i++) {\n            var button = buttons_2[_i];\n            button.classList.remove('segment-button-after-checked');\n        }\n        if (next < buttons.length) {\n            buttons[next].classList.add('segment-button-after-checked');\n        }\n    };\n    class_1.prototype.setNextIndex = function (detail, isEnd) {\n        var _this = this;\n        if (isEnd === void 0) { isEnd = false; }\n        var isRTL = document.dir === 'rtl';\n        var activated = this.activated;\n        var buttons = this.getButtons();\n        var index = buttons.findIndex(function (button) { return button.value === _this.value; });\n        var previous = buttons[index];\n        var current;\n        var nextIndex;\n        if (index === -1) {\n            return;\n        }\n        // Get the element that the touch event started on in case\n        // it was the checked button, then we will move the indicator\n        var rect = previous.getBoundingClientRect();\n        var left = rect.left;\n        var width = rect.width;\n        // Get the element that the gesture is on top of based on the currentX of the\n        // gesture event and the Y coordinate of the starting element, since the gesture\n        // can move up and down off of the segment\n        var currentX = detail.currentX;\n        var previousY = rect.top + (rect.height / 2);\n        var nextEl = document.elementFromPoint(currentX, previousY);\n        var decreaseIndex = isRTL ? currentX > (left + width) : currentX < left;\n        var increaseIndex = isRTL ? currentX < left : currentX > (left + width);\n        // If the indicator is currently activated then we have started the gesture\n        // on top of the checked button so we need to slide the indicator\n        // by checking the button next to it as we move\n        if (activated && !isEnd) {\n            // Decrease index, move left in LTR & right in RTL\n            if (decreaseIndex) {\n                var newIndex = index - 1;\n                if (newIndex >= 0) {\n                    nextIndex = newIndex;\n                }\n                // Increase index, moves right in LTR & left in RTL\n            }\n            else if (increaseIndex) {\n                if (activated && !isEnd) {\n                    var newIndex = index + 1;\n                    if (newIndex < buttons.length) {\n                        nextIndex = newIndex;\n                    }\n                }\n            }\n            if (nextIndex !== undefined && !buttons[nextIndex].disabled) {\n                current = buttons[nextIndex];\n            }\n        }\n        // If the indicator is not activated then we will just set the indicator\n        // to the element where the gesture ended\n        if (!activated && isEnd) {\n            current = nextEl;\n        }\n        /* tslint:disable-next-line */\n        if (current != null) {\n            /**\n             * If current element is ion-segment then that means\n             * user tried to select a disabled ion-segment-button,\n             * and we should not update the ripple.\n             */\n            if (current.tagName === 'ION-SEGMENT') {\n                return false;\n            }\n            if (previous !== current) {\n                this.checkButton(previous, current);\n            }\n        }\n        return true;\n    };\n    class_1.prototype.emitStyle = function () {\n        this.ionStyle.emit({\n            'segment': true\n        });\n    };\n    class_1.prototype.render = function () {\n        var _a;\n        var mode = getIonMode(this);\n        return (h(Host, { onClick: this.onClick, class: Object.assign(Object.assign({}, createColorClasses(this.color)), (_a = {}, _a[mode] = true, _a['in-toolbar'] = hostContext('ion-toolbar', this.el), _a['in-toolbar-color'] = hostContext('ion-toolbar[color]', this.el), _a['segment-activated'] = this.activated, _a['segment-disabled'] = this.disabled, _a['segment-scrollable'] = this.scrollable, _a)) }, h(\"slot\", null)));\n    };\n    Object.defineProperty(class_1.prototype, \"el\", {\n        get: function () { return getElement(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(class_1, \"watchers\", {\n        get: function () {\n            return {\n                \"value\": [\"valueChanged\"],\n                \"disabled\": [\"disabledChanged\"]\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(class_1, \"style\", {\n        get: function () { return \":host{--ripple-color:currentColor;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:stretch;align-items:stretch;-ms-flex-pack:center;justify-content:center;width:100%;background:var(--background);font-family:var(--ion-font-family,inherit);text-align:center;contain:paint}:host(.segment-scrollable){-ms-flex-pack:start;justify-content:start;width:auto;overflow-x:scroll}:host(.segment-scrollable::-webkit-scrollbar){display:none}:host{--background:rgba(var(--ion-text-color-rgb,0,0,0),0.065);border-radius:8px;overflow:hidden;z-index:0}:host(.ion-color){background:rgba(var(--ion-color-base-rgb),.065)}:host(.in-toolbar){margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;width:auto}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){:host(.in-toolbar){margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}:host(.in-toolbar:not(.ion-color)){background:var(--ion-toolbar-segment-background,var(--background))}:host(.in-toolbar-color:not(.ion-color)){background:rgba(var(--ion-color-contrast-rgb),.11)}\"; },\n        enumerable: true,\n        configurable: true\n    });\n    return class_1;\n}());\nvar ids = 0;\nvar SegmentButton = /** @class */ (function () {\n    function SegmentButton(hostRef) {\n        var _this = this;\n        registerInstance(this, hostRef);\n        this.segmentEl = null;\n        this.checked = false;\n        /**\n         * If `true`, the user cannot interact with the segment button.\n         */\n        this.disabled = false;\n        /**\n         * Set the layout of the text and icon in the segment.\n         */\n        this.layout = 'icon-top';\n        /**\n         * The type of the button.\n         */\n        this.type = 'button';\n        /**\n         * The value of the segment button.\n         */\n        this.value = 'ion-sb-' + (ids++);\n        this.updateState = function () {\n            if (_this.segmentEl) {\n                _this.checked = _this.segmentEl.value === _this.value;\n            }\n        };\n    }\n    SegmentButton.prototype.connectedCallback = function () {\n        var segmentEl = this.segmentEl = this.el.closest('ion-segment');\n        if (segmentEl) {\n            this.updateState();\n            segmentEl.addEventListener('ionSelect', this.updateState);\n        }\n    };\n    SegmentButton.prototype.disconnectedCallback = function () {\n        var segmentEl = this.segmentEl;\n        if (segmentEl) {\n            segmentEl.removeEventListener('ionSelect', this.updateState);\n            this.segmentEl = null;\n        }\n    };\n    Object.defineProperty(SegmentButton.prototype, \"hasLabel\", {\n        get: function () {\n            return !!this.el.querySelector('ion-label');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SegmentButton.prototype, \"hasIcon\", {\n        get: function () {\n            return !!this.el.querySelector('ion-icon');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SegmentButton.prototype.render = function () {\n        var _a;\n        var _b = this, checked = _b.checked, type = _b.type, disabled = _b.disabled, hasIcon = _b.hasIcon, hasLabel = _b.hasLabel, layout = _b.layout;\n        var mode = getIonMode(this);\n        return (h(Host, { \"aria-disabled\": disabled ? 'true' : null, class: (_a = {},\n                _a[mode] = true,\n                _a['in-toolbar'] = hostContext('ion-toolbar', this.el),\n                _a['in-toolbar-color'] = hostContext('ion-toolbar[color]', this.el),\n                _a['in-segment'] = hostContext('ion-segment', this.el),\n                _a['in-segment-color'] = hostContext('ion-segment[color]', this.el),\n                _a['segment-button-has-label'] = hasLabel,\n                _a['segment-button-has-icon'] = hasIcon,\n                _a['segment-button-has-label-only'] = hasLabel && !hasIcon,\n                _a['segment-button-has-icon-only'] = hasIcon && !hasLabel,\n                _a['segment-button-disabled'] = disabled,\n                _a['segment-button-checked'] = checked,\n                _a[\"segment-button-layout-\" + layout] = true,\n                _a['ion-activatable'] = true,\n                _a['ion-activatable-instant'] = true,\n                _a['ion-focusable'] = true,\n                _a) }, h(\"button\", { type: type, \"aria-pressed\": checked ? 'true' : null, class: \"button-native\", disabled: disabled }, h(\"span\", { class: \"button-inner\" }, h(\"slot\", null)), mode === 'md' && h(\"ion-ripple-effect\", null)), h(\"div\", { part: \"indicator\", class: {\n                'segment-button-indicator': true,\n                'segment-button-indicator-animated': true\n            } }, h(\"div\", { part: \"indicator-background\", class: \"segment-button-indicator-background\" }))));\n    };\n    Object.defineProperty(SegmentButton.prototype, \"el\", {\n        get: function () { return getElement(this); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SegmentButton, \"style\", {\n        get: function () { return \":host{--color:initial;--color-hover:var(--color);--color-checked:var(--color);--color-disabled:var(--color);--padding-start:0;--padding-end:0;border-radius:var(--border-radius);-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-direction:column;flex-direction:column;background:var(--background);color:var(--color);text-decoration:none;text-overflow:ellipsis;white-space:nowrap;-webkit-font-kerning:none;font-kerning:none;cursor:pointer}.button-native,:host{display:-ms-flexbox;display:flex;height:auto}.button-native{border-radius:0;font-family:inherit;font-size:inherit;font-style:inherit;font-weight:inherit;letter-spacing:inherit;text-decoration:inherit;text-indent:inherit;text-overflow:inherit;text-transform:inherit;text-align:inherit;white-space:inherit;color:inherit;margin-left:var(--margin-start);margin-right:var(--margin-end);margin-top:var(--margin-top);margin-bottom:var(--margin-bottom);padding-left:var(--padding-start);padding-right:var(--padding-end);padding-top:var(--padding-top);padding-bottom:var(--padding-bottom);-webkit-transform:translateZ(0);transform:translateZ(0);position:relative;-ms-flex-direction:inherit;flex-direction:inherit;-ms-flex-positive:1;flex-grow:1;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;min-width:inherit;max-width:inherit;min-height:inherit;max-height:inherit;-webkit-transition:var(--transition);transition:var(--transition);border:none;outline:none;background:transparent;contain:content;pointer-events:none;overflow:hidden;z-index:2}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){.button-native{margin-left:unset;margin-right:unset;-webkit-margin-start:var(--margin-start);margin-inline-start:var(--margin-start);-webkit-margin-end:var(--margin-end);margin-inline-end:var(--margin-end);padding-left:unset;padding-right:unset;-webkit-padding-start:var(--padding-start);padding-inline-start:var(--padding-start);-webkit-padding-end:var(--padding-end);padding-inline-end:var(--padding-end)}}.button-native:after{left:0;right:0;top:0;bottom:0;position:absolute;content:\\\"\\\";opacity:0}.button-inner{display:-ms-flexbox;display:flex;position:relative;-ms-flex-flow:inherit;flex-flow:inherit;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;width:100%;height:100%;z-index:1}:host(.segment-button-checked){background:var(--background-checked);color:var(--color-checked)}:host(.segment-button-disabled){cursor:default;pointer-events:none}:host(.ion-focused) .button-native{color:var(--color-focused)}:host(.ion-focused) .button-native:after{background:var(--background-focused);opacity:var(--background-focused-opacity)}\\@media (any-hover:hover){:host(:hover) .button-native{color:var(--color-hover)}:host(:hover) .button-native:after{background:var(--background-hover);opacity:var(--background-hover-opacity)}:host(.segment-button-checked:hover) .button-native{color:var(--color-checked)}}::slotted(ion-icon){-ms-flex-negative:0;flex-shrink:0;-ms-flex-order:-1;order:-1;pointer-events:none}::slotted(ion-label){display:block;-ms-flex-item-align:center;align-self:center;line-height:22px;text-overflow:ellipsis;white-space:nowrap;-webkit-box-sizing:border-box;box-sizing:border-box;pointer-events:none}:host(.segment-button-layout-icon-top) .button-native{-ms-flex-direction:column;flex-direction:column}:host(.segment-button-layout-icon-start) .button-native{-ms-flex-direction:row;flex-direction:row}:host(.segment-button-layout-icon-end) .button-native{-ms-flex-direction:row-reverse;flex-direction:row-reverse}:host(.segment-button-layout-icon-bottom) .button-native{-ms-flex-direction:column-reverse;flex-direction:column-reverse}:host(.segment-button-layout-icon-hide) ::slotted(ion-icon),:host(.segment-button-layout-label-hide) ::slotted(ion-label){display:none}ion-ripple-effect{color:var(--ripple-color,var(--color-checked))}.segment-button-indicator{-webkit-transform-origin:left;transform-origin:left;position:absolute;opacity:0;-webkit-box-sizing:border-box;box-sizing:border-box;will-change:transform,opacity}.segment-button-indicator-background{width:100%;height:var(--indicator-height);-webkit-transform:var(--indicator-transform);transform:var(--indicator-transform);-webkit-box-shadow:var(--indicator-box-shadow);box-shadow:var(--indicator-box-shadow)}.segment-button-indicator-animated{-webkit-transition:var(--indicator-transition);transition:var(--indicator-transition)}:host(.segment-button-checked) .segment-button-indicator{opacity:1}\\@media (prefers-reduced-motion:reduce){.segment-button-indicator-background{-webkit-transform:none;transform:none}.segment-button-indicator-animated{-webkit-transition:none;transition:none}}:host{--background:none;--background-checked:none;--background-hover:none;--background-hover-opacity:0;--background-focused:none;--background-focused-opacity:0;--border-radius:7px;--border-width:1px;--border-color:rgba(var(--ion-text-color-rgb,0,0,0),0.12);--border-style:solid;--indicator-box-shadow:0 0 5px rgba(0,0,0,0.16);--indicator-color:var(--ion-color-step-350,var(--ion-background-color,#fff));--indicator-height:100%;--indicator-transition:transform 260ms cubic-bezier(0.4,0,0.2,1);--indicator-transform:none;--transition:100ms all linear;--padding-top:0;--padding-end:13px;--padding-bottom:0;--padding-start:13px;margin-top:2px;margin-bottom:2px;position:relative;-ms-flex-preferred-size:0;flex-basis:0;-ms-flex-direction:row;flex-direction:row;min-width:70px;min-height:28px;-webkit-transform:translateZ(0);transform:translateZ(0);font-size:13px;font-weight:450;line-height:37px}:host:before{margin-left:0;margin-right:0;margin-top:5px;margin-bottom:5px;-webkit-transition:opacity .16s ease-in-out;transition:opacity .16s ease-in-out;-webkit-transition-delay:.1s;transition-delay:.1s;border-left:var(--border-width) var(--border-style) var(--border-color);content:\\\"\\\";opacity:1;will-change:opacity}:host(:first-of-type):before{border-left-color:transparent}:host(.segment-button-disabled){opacity:.3}::slotted(ion-icon){font-size:24px}:host(.segment-button-layout-icon-start) ::slotted(ion-label){margin-left:2px;margin-right:0}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){:host(.segment-button-layout-icon-start) ::slotted(ion-label){margin-left:unset;margin-right:unset;-webkit-margin-start:2px;margin-inline-start:2px;-webkit-margin-end:0;margin-inline-end:0}}:host(.segment-button-layout-icon-end) ::slotted(ion-label){margin-left:0;margin-right:2px}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){:host(.segment-button-layout-icon-end) ::slotted(ion-label){margin-left:unset;margin-right:unset;-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:2px;margin-inline-end:2px}}.segment-button-indicator{padding-left:2px;padding-right:2px;left:0;right:0;top:0;bottom:0}\\@supports ((-webkit-margin-start:0) or (margin-inline-start:0)) or (-webkit-margin-start:0){.segment-button-indicator{padding-left:unset;padding-right:unset;-webkit-padding-start:2px;padding-inline-start:2px;-webkit-padding-end:2px;padding-inline-end:2px}}.segment-button-indicator-background{border-radius:var(--border-radius);background:var(--indicator-color);-webkit-transition:var(--indicator-transition);transition:var(--indicator-transition)}:host(.segment-button-after-checked):before,:host(.segment-button-checked):before{opacity:0}:host(.segment-button-checked){z-index:-1}:host(.segment-button-activated){--indicator-transform:scale(0.95)}:host(.ion-focused) .button-native{opacity:.7}\\@media (any-hover:hover){:host(:hover) .button-native{opacity:.5}:host(.segment-button-checked:hover) .button-native{opacity:1}}:host(.in-segment-color){background:none;color:var(--ion-text-color,#000)}:host(.in-segment-color) .segment-button-indicator-background{background:var(--ion-color-step-350,var(--ion-background-color,#fff))}\\@media (any-hover:hover){:host(.in-segment-color.segment-button-checked:hover) .button-native,:host(.in-segment-color:hover) .button-native{color:var(--ion-text-color,#000)}}:host(.in-toolbar:not(.in-segment-color)){--background-checked:var(--ion-toolbar-segment-background-checked,none);--color:var(--ion-toolbar-segment-color,var(--ion-toolbar-color),initial);--color-checked:var(--ion-toolbar-segment-color-checked,var(--ion-toolbar-color),initial);--indicator-color:var(--ion-toolbar-segment-indicator-color,var(--ion-color-step-350,var(--ion-background-color,#fff)))}:host(.in-toolbar-color) .segment-button-indicator-background{background:#fff}:host(.in-toolbar-color:not(.in-segment-color)) .button-native{color:var(--ion-color-contrast)}:host(.in-toolbar-color.segment-button-checked:not(.in-segment-color)) .button-native{color:var(--ion-color-base)}\\@media (any-hover:hover){:host(.in-toolbar-color:not(.in-segment-color):hover) .button-native{color:var(--ion-color-contrast)}:host(.in-toolbar-color.segment-button-checked:not(.in-segment-color):hover) .button-native{color:var(--ion-color-base)}}\"; },\n        enumerable: true,\n        configurable: true\n    });\n    return SegmentButton;\n}());\nexport { Segment as ion_segment, SegmentButton as ion_segment_button };\n"],"sourceRoot":"webpack:///"}